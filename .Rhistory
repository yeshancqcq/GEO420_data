}
# initiating 2 vectors, one for temperature anomaly, one for abandoned
# files (those without data at 10000 years bp)
abandoned_files <- vector()
temp_anomaly <- vector()
# Check if it has data for anomaly years bp
# if yes: generate the anomaly vector
# if no: print the filename and add it to the abandoned files
if (is.na(anomaly_base)){
cat(filename," does not contain the anomaly standard.")
abandoned_files <- c(abandoned_files, filename)
} else {
for(j in 1:nrow(dt_int)){
anomaly <- dt_int$temp[j]-anomaly_base
temp_anomaly <- c(temp_anomaly, anomaly)
}
# Generating the new data frame with age, temp and anomaly columns
dt_df <- data.frame(Age=dt_int$age, Temperature=dt_int$temp, Anomaly=temp_anomaly)
# Writing the csv
write.csv(dt_df, paste0("/Users/yeshan/Documents/github/GEO420_data/anomaly_int_data_new/anomaly_", filename), row.names=F)
}
})
library(plyr)
files <- list.files(path="C:\Users\Shan Ye\Documents\GitHub\GEO420_data\cleared_data",
pattern="*.csv", full.names=TRUE, recursive=FALSE)
lapply(files, function(x) {
dt <- read.csv(x, skip=0)
filename <- basename(x)
cat("processing", filename)
start_age = dt$age[1]
# Getting the next 100 year point prior to the latest age
start_num = round_any(start_age, 100, f = ceiling)
# Doing the linear interpolation with 100-yr steps
# Starting at the next 100 year point prior to the latest age
dt_int=linterp(dt, dt=100, start=start_num, genplot=F)
#get the 10000 bp row number as reference (anomaly base)
anomaly_base = NA
for (i in 1:nrow(dt_int)){
if(dt_int$age[i]==10000){
anomaly_base <- dt_int$temp[i]
}
}
# initiating 2 vectors, one for temperature anomaly, one for abandoned
# files (those without data at 10000 years bp)
abandoned_files <- vector()
temp_anomaly <- vector()
# Check if it has data at 10000 years bp
# if yes: generate the anomaly vector
# if no: print the filename and add it to the abandoned files
if (is.na(anomaly_base)){
cat(filename," does not contain the anomaly standard.")
abandoned_files <- c(abandoned_files, filename)
} else {
for(j in 1:nrow(dt_int)){
anomaly <- dt_int$temp[j]-anomaly_base
temp_anomaly <- c(temp_anomaly, anomaly)
}
# Generating the new data frame with age, temp and anomaly columns
dt_df <- data.frame(Age=dt_int$age, Temperature=dt_int$temp, Anomaly=temp_anomaly)
# Writing the csv
write.csv(dt_df, paste0("/Users/apple/Documents/moving_ave/test/anomaly_", filename), row.names=F)
}
})
library(plyr)
library(astrochron)
files <- list.files(path="C:\Users\Shan Ye\Documents\GitHub\GEO420_data\cleared_data",
pattern="*.csv", full.names=TRUE, recursive=FALSE)
lapply(files, function(x) {
dt <- read.csv(x, skip=0)
filename <- basename(x)
cat("processing", filename)
start_age = dt$age[1]
# Getting the next 100 year point prior to the latest age
start_num = round_any(start_age, 100, f = ceiling)
# Doing the linear interpolation with 100-yr steps
# Starting at the next 100 year point prior to the latest age
dt_int=linterp(dt, dt=100, start=start_num, genplot=F)
#get the 10000 bp row number as reference (anomaly base)
anomaly_base = NA
for (i in 1:nrow(dt_int)){
if(dt_int$age[i]==10000){
anomaly_base <- dt_int$temp[i]
}
}
# initiating 2 vectors, one for temperature anomaly, one for abandoned
# files (those without data at 10000 years bp)
abandoned_files <- vector()
temp_anomaly <- vector()
# Check if it has data at 10000 years bp
# if yes: generate the anomaly vector
# if no: print the filename and add it to the abandoned files
if (is.na(anomaly_base)){
cat(filename," does not contain the anomaly standard.")
abandoned_files <- c(abandoned_files, filename)
} else {
for(j in 1:nrow(dt_int)){
anomaly <- dt_int$temp[j]-anomaly_base
temp_anomaly <- c(temp_anomaly, anomaly)
}
# Generating the new data frame with age, temp and anomaly columns
dt_df <- data.frame(Age=dt_int$age, Temperature=dt_int$temp, Anomaly=temp_anomaly)
# Writing the csv
write.csv(dt_df, paste0("/Users/apple/Documents/moving_ave/test/anomaly_", filename), row.names=F)
}
})
library(plyr)
library(astrochron)
files <- list.files(path="/Users/yeshan/Documents/github/GEO420_data/cleared_data",
pattern="*.csv", full.names=TRUE, recursive=FALSE)
lapply(files, function(x) {
dt <- read.csv(x, skip=0)
filename <- basename(x)
cat("processing", filename)
start_age = dt$age[1]
# Getting the next 100 year point prior to the latest age
start_num = round_any(start_age, 100, f = ceiling)
# Doing the linear interpolation with 100-yr steps
# Starting at the next 100 year point prior to the latest age
dt_int=linterp(dt, dt=100, start=start_num, genplot=F)
#get the 10000 bp row number as reference (anomaly base)
# get the average between 8000 and 12000 bp as reference (anomaly base)
anomaly_base = NA
for (i in 1:nrow(dt_int)){
counter <- 0
sumRange <- 0
if(dt_int$age[i]>=8000 && dt_int$age[i] <= 12000){
sumRange <- sumRange + dt_int$temp[i]
counter <- counter + 1
}
}
# if there are more than 10 data points within the 8000-12000 bp range, we regard it a valid case for generating the anomaly base
if(counter >= 10){
anomaly_base <- sumRange/counter
} else {
anomaly_base = NA
}
# initiating 2 vectors, one for temperature anomaly, one for abandoned
# files (those without data at 10000 years bp)
abandoned_files <- vector()
temp_anomaly <- vector()
# Check if it has data for anomaly years bp
# if yes: generate the anomaly vector
# if no: print the filename and add it to the abandoned files
if (is.na(anomaly_base)){
cat(filename," does not contain the anomaly standard.")
abandoned_files <- c(abandoned_files, filename)
} else {
for(j in 1:nrow(dt_int)){
anomaly <- dt_int$temp[j]-anomaly_base
temp_anomaly <- c(temp_anomaly, anomaly)
}
# Generating the new data frame with age, temp and anomaly columns
dt_df <- data.frame(Age=dt_int$age, Temperature=dt_int$temp, Anomaly=temp_anomaly)
# Writing the csv
write.csv(dt_df, paste0("/Users/yeshan/Documents/github/GEO420_data/anomaly_int_data_new/anomaly_", filename), row.names=F)
}
})
library(plyr)
library(astrochron)
files <- list.files(path="/Users/yeshan/Documents/github/GEO420_data/cleared_data",
pattern="*.csv", full.names=TRUE, recursive=FALSE)
lapply(files, function(x) {
dt <- read.csv(x, skip=0)
filename <- basename(x)
cat("processing", filename)
start_age = dt$age[1]
# Getting the next 100 year point prior to the latest age
start_num = round_any(start_age, 100, f = ceiling)
# Doing the linear interpolation with 100-yr steps
# Starting at the next 100 year point prior to the latest age
dt_int=linterp(dt, dt=100, start=start_num, genplot=F)
#get the 10000 bp row number as reference (anomaly base)
# get the average between 8000 and 12000 bp as reference (anomaly base)
anomaly_base = NA
for (i in 1:nrow(dt_int)){
counter <- 0
sumRange <- 0
if(dt_int$age[i]>=8000 && dt_int$age[i] <= 12000){
sumRange <- sumRange + dt_int$temp[i]
counter <- counter + 1
}
}
# if there are more than 10 data points within the 8000-12000 bp range, we regard it a valid case for generating the anomaly base
if(counter >= 10){
anomaly_base <- sumRange/counter
} else {
anomaly_base = NA
}
# initiating 2 vectors, one for temperature anomaly, one for abandoned
# files (those without data at 10000 years bp)
abandoned_files <- vector()
temp_anomaly <- vector()
# Check if it has data for anomaly years bp
# if yes: generate the anomaly vector
# if no: print the filename and add it to the abandoned files
if (is.na(anomaly_base)){
cat(filename," does not contain the anomaly standard.")
abandoned_files <- c(abandoned_files, filename)
} else {
for(j in 1:nrow(dt_int)){
anomaly <- dt_int$temp[j]-anomaly_base
temp_anomaly <- c(temp_anomaly, anomaly)
}
# Generating the new data frame with age, temp and anomaly columns
dt_df <- data.frame(Age=dt_int$age, Temperature=dt_int$temp, Anomaly=temp_anomaly)
# Writing the csv
write.csv(dt_df, paste0("/Users/yeshan/Documents/github/GEO420_data/anomaly_int_data_new/anomaly_", filename), row.names=F)
}
})
library(plyr)
library(astrochron)
files <- list.files(path="/Users/yeshan/Documents/github/GEO420_data/cleared_data",
pattern="*.csv", full.names=TRUE, recursive=FALSE)
lapply(files, function(x) {
dt <- read.csv(x, skip=0)
filename <- basename(x)
cat("processing", filename)
start_age = dt$age[1]
# Getting the next 100 year point prior to the latest age
start_num = round_any(start_age, 100, f = ceiling)
# Doing the linear interpolation with 100-yr steps
# Starting at the next 100 year point prior to the latest age
dt_int=linterp(dt, dt=100, start=start_num, genplot=F)
#get the 10000 bp row number as reference (anomaly base)
# get the average between 8000 and 12000 bp as reference (anomaly base)
anomaly_base = NA
for (i in 1:nrow(dt_int)){
counter <- 0
sumRange <- 0
if(i>=8000 && i <= 12000){
if(dt_int$temp[i]!=0{
sumRange <- sumRange + dt_int$temp[i]
counter <- counter + 1
})
}
}
# if there are more than 10 data points within the 8000-12000 bp range, we regard it a valid case for generating the anomaly base
if(counter >= 10){
anomaly_base <- sumRange/counter
} else {
anomaly_base = NA
}
# initiating 2 vectors, one for temperature anomaly, one for abandoned
# files (those without data at 10000 years bp)
abandoned_files <- vector()
temp_anomaly <- vector()
# Check if it has data for anomaly years bp
# if yes: generate the anomaly vector
# if no: print the filename and add it to the abandoned files
if (is.na(anomaly_base)){
cat(filename," does not contain the anomaly standard.")
abandoned_files <- c(abandoned_files, filename)
} else {
for(j in 1:nrow(dt_int)){
anomaly <- dt_int$temp[j]-anomaly_base
temp_anomaly <- c(temp_anomaly, anomaly)
}
# Generating the new data frame with age, temp and anomaly columns
dt_df <- data.frame(Age=dt_int$age, Temperature=dt_int$temp, Anomaly=temp_anomaly)
# Writing the csv
write.csv(dt_df, paste0("/Users/yeshan/Documents/github/GEO420_data/anomaly_int_data_new/anomaly_", filename), row.names=F)
}
})
library(plyr)
library(astrochron)
files <- list.files(path="/Users/yeshan/Documents/github/GEO420_data/cleared_data",
pattern="*.csv", full.names=TRUE, recursive=FALSE)
lapply(files, function(x) {
dt <- read.csv(x, skip=0)
filename <- basename(x)
cat("processing", filename)
start_age = dt$age[1]
# Getting the next 100 year point prior to the latest age
start_num = round_any(start_age, 100, f = ceiling)
# Doing the linear interpolation with 100-yr steps
# Starting at the next 100 year point prior to the latest age
dt_int=linterp(dt, dt=100, start=start_num, genplot=F)
#get the 10000 bp row number as reference (anomaly base)
# get the average between 8000 and 12000 bp as reference (anomaly base)
anomaly_base = NA
for (i in 1:nrow(dt_int)){
counter <- 0
sumRange <- 0
if(i>=8000 && i <= 12000){
if(dt_int$temp[i]!=0){
sumRange <- sumRange + dt_int$temp[i]
counter <- counter + 1
}
}
}
# if there are more than 10 data points within the 8000-12000 bp range, we regard it a valid case for generating the anomaly base
if(counter >= 10){
anomaly_base <- sumRange/counter
} else {
anomaly_base = NA
}
# initiating 2 vectors, one for temperature anomaly, one for abandoned
# files (those without data at 10000 years bp)
abandoned_files <- vector()
temp_anomaly <- vector()
# Check if it has data for anomaly years bp
# if yes: generate the anomaly vector
# if no: print the filename and add it to the abandoned files
if (is.na(anomaly_base)){
cat(filename," does not contain the anomaly standard.")
abandoned_files <- c(abandoned_files, filename)
} else {
for(j in 1:nrow(dt_int)){
anomaly <- dt_int$temp[j]-anomaly_base
temp_anomaly <- c(temp_anomaly, anomaly)
}
# Generating the new data frame with age, temp and anomaly columns
dt_df <- data.frame(Age=dt_int$age, Temperature=dt_int$temp, Anomaly=temp_anomaly)
# Writing the csv
write.csv(dt_df, paste0("/Users/yeshan/Documents/github/GEO420_data/anomaly_int_data_new/anomaly_", filename), row.names=F)
}
})
library(plyr)
library(astrochron)
files <- list.files(path="/Users/yeshan/Documents/github/GEO420_data/cleared_data",
pattern="*.csv", full.names=TRUE, recursive=FALSE)
lapply(files, function(x) {
dt <- read.csv(x, skip=0)
filename <- basename(x)
cat("processing", filename)
start_age = dt$age[1]
# Getting the next 100 year point prior to the latest age
start_num = round_any(start_age, 100, f = ceiling)
# Doing the linear interpolation with 100-yr steps
# Starting at the next 100 year point prior to the latest age
dt_int=linterp(dt, dt=100, start=start_num, genplot=F)
#get the 10000 bp row number as reference (anomaly base)
# get the average between 8000 and 12000 bp as reference (anomaly base)
anomaly_base = NA
counter <- 0
sumRange <- 0
for (i in 1:nrow(dt_int)){
if(i>=8000 && i <= 12000){
if(dt_int$temp[i]!=0){
sumRange <- sumRange + dt_int$temp[i]
counter <- counter + 1
}
}
}
# if there are more than 10 data points within the 8000-12000 bp range, we regard it a valid case for generating the anomaly base
if(counter >= 10){
anomaly_base <- sumRange/counter
} else {
anomaly_base = NA
}
# initiating 2 vectors, one for temperature anomaly, one for abandoned
# files (those without data at 10000 years bp)
abandoned_files <- vector()
temp_anomaly <- vector()
# Check if it has data for anomaly years bp
# if yes: generate the anomaly vector
# if no: print the filename and add it to the abandoned files
if (is.na(anomaly_base)){
cat(filename," does not contain the anomaly standard.")
abandoned_files <- c(abandoned_files, filename)
} else {
for(j in 1:nrow(dt_int)){
anomaly <- dt_int$temp[j]-anomaly_base
temp_anomaly <- c(temp_anomaly, anomaly)
}
# Generating the new data frame with age, temp and anomaly columns
dt_df <- data.frame(Age=dt_int$age, Temperature=dt_int$temp, Anomaly=temp_anomaly)
# Writing the csv
write.csv(dt_df, paste0("/Users/yeshan/Documents/github/GEO420_data/anomaly_int_data_new/anomaly_", filename), row.names=F)
}
})
library(plyr)
library(astrochron)
files <- list.files(path="/Users/yeshan/Documents/github/GEO420_data/cleared_data",
pattern="*.csv", full.names=TRUE, recursive=FALSE)
lapply(files, function(x) {
dt <- read.csv(x, skip=0)
filename <- basename(x)
cat("processing", filename)
start_age = dt$age[1]
# Getting the next 100 year point prior to the latest age
start_num = round_any(start_age, 100, f = ceiling)
# Doing the linear interpolation with 100-yr steps
# Starting at the next 100 year point prior to the latest age
dt_int=linterp(dt, dt=100, start=start_num, genplot=F)
# get the average between 8000 and 12000 bp as reference (anomaly base)
anomaly_base = NA
counter <- 0
sumRange <- 0
for (i in 1:nrow(dt_int)){
if(dt_int$age[i]>=8000 && dt_int$age[i]<= 12000){
if(dt_int$temp[i]!=0){
sumRange <- sumRange + dt_int$temp[i]
counter <- counter + 1
}
}
}
# if there are more than 10 data points within the 8000-12000 bp range, we regard it a valid case for generating the anomaly base
if(counter >= 10){
anomaly_base <- sumRange/counter
} else {
anomaly_base = NA
}
# initiating 2 vectors, one for temperature anomaly, one for abandoned
# files (those without data at 10000 years bp)
abandoned_files <- vector()
temp_anomaly <- vector()
# Check if it has data for anomaly years bp
# if yes: generate the anomaly vector
# if no: print the filename and add it to the abandoned files
if (is.na(anomaly_base)){
cat(filename," does not contain the anomaly standard.")
abandoned_files <- c(abandoned_files, filename)
} else {
for(j in 1:nrow(dt_int)){
anomaly <- dt_int$temp[j]-anomaly_base
temp_anomaly <- c(temp_anomaly, anomaly)
}
# Generating the new data frame with age, temp and anomaly columns
dt_df <- data.frame(Age=dt_int$age, Temperature=dt_int$temp, Anomaly=temp_anomaly)
# Writing the csv
write.csv(dt_df, paste0("/Users/yeshan/Documents/github/GEO420_data/anomaly_int_data_new/anomaly_", filename), row.names=F)
}
})
library(readr)
library(ggplot2)
metadata <- read_csv("Anomaly_metadata_new.csv")
coverage <- data.frame(ID=metadata$ID, Lat=metadata$Latitude, Lon=metadata$Longitude)
for(i in 0:220){
coverage$new <- NA
for(j in 1:nrow(coverage)){
lat <- coverage$Lat[j]
if(is.na(metadata[j, i+13])){
coverage$new[j] <- NA
} else {
coverage$new[j] <- lat
}
}
colnames(coverage)[4+i] <- toString(i)
}
for (i in 4:224){
k=153
coverage[k,i]=i-4
}
output <- coverage
output <- output[,-1]
output<- as.data.frame(t(output))
anomaly_min <- data.frame(xmin = 98, xmax = 105, ymin = -Inf, ymax = Inf)
anomaly_max <- data.frame(xmin = 83, xmax = 120, ymin = -Inf, ymax = Inf)
plot <- ggplot()
for(i in 1:151){
gg.data <- data.frame( Time=output[,153], Lat=output[,i])
plot<- plot+
geom_line(data=gg.data, aes(x=(0:220), y=Lat),size = 1, colour="#cfcdc8", alpha = 1)
}
plot <- plot + scale_x_reverse(limits = c(220, 0),breaks = scales::pretty_breaks(n = 9)) +
ggtitle("Spatiotemporal coverage of paleoclimate data", "with potential periods for anomaly calculation") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
scale_y_continuous(name = expression("Latitude"), limits = c(-90,90), breaks = scales::pretty_breaks(n = 9))+
labs(y = "Counts",
x = "Time (Hundred years bp)",
colour = "Parameter")+
geom_rect(data=anomaly_min, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="blue", alpha=0.1, inherit.aes = FALSE)+
geom_rect(data=anomaly_max, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="red", alpha=0.05, inherit.aes = FALSE)
print(plot)
View(gg.data)
View(output)
library(readr)
library(ggplot2)
metadata <- read_csv("Anomaly_metadata_new.csv")
coverage <- data.frame(ID=metadata$ID, Lat=metadata$Latitude, Lon=metadata$Longitude)
for(i in 0:220){
coverage$new <- NA
for(j in 1:nrow(coverage)){
lat <- coverage$Lat[j]
if(is.na(metadata[j, i+13])){
coverage$new[j] <- NA
} else {
coverage$new[j] <- lat
}
}
colnames(coverage)[4+i] <- toString(i)
}
for (i in 4:224){
k=153
coverage[k,i]=i-4
}
output <- coverage
output <- output[,-1]
output <- output[,-1]
output <- output[,-1]
output<- as.data.frame(t(output))
anomaly_min <- data.frame(xmin = 98, xmax = 105, ymin = -Inf, ymax = Inf)
anomaly_max <- data.frame(xmin = 83, xmax = 120, ymin = -Inf, ymax = Inf)
plot <- ggplot()
for(i in 1:151){
gg.data <- data.frame( Time=output[,153], Lat=output[,i])
plot<- plot+
geom_line(data=gg.data, aes(x=(0:220), y=Lat),size = 1, colour="#cfcdc8", alpha = 1)
}
plot <- plot + scale_x_reverse(limits = c(220, 0),breaks = scales::pretty_breaks(n = 9)) +
ggtitle("Spatiotemporal coverage of paleoclimate data", "with potential periods for anomaly calculation") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_line(colour = "black"))+
scale_y_continuous(name = expression("Latitude"), limits = c(-90,90), breaks = scales::pretty_breaks(n = 9))+
labs(y = "Counts",
x = "Time (Hundred years bp)",
colour = "Parameter")+
geom_rect(data=anomaly_min, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="blue", alpha=0.1, inherit.aes = FALSE)+
geom_rect(data=anomaly_max, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax), fill="red", alpha=0.05, inherit.aes = FALSE)
print(plot)
